From 6463cdab6c33f855ba9bf193b5a4298e9df8b145 Mon Sep 17 00:00:00 2001
From: kszaq <kszaquitto@gmail.com>
Date: Mon, 9 Mar 2015 16:19:51 +0100
Subject: [PATCH] [aml] Refactor aml_mode_to_resolution to support SD
 resolutions and framerate automation

---
 xbmc/utils/AMLUtils.cpp                     | 182 ++++++++++++++--------------
 xbmc/windowing/egl/EGLNativeTypeAmlogic.cpp |  12 ++
 2 files changed, 106 insertions(+), 88 deletions(-)

diff --git a/xbmc/utils/AMLUtils.cpp b/xbmc/utils/AMLUtils.cpp
index d5d3292..dad10d9 100644
--- a/xbmc/utils/AMLUtils.cpp
+++ b/xbmc/utils/AMLUtils.cpp
@@ -329,113 +329,120 @@ bool aml_mode_to_resolution(const char *mode, RESOLUTION_INFO *res)
     res->fRefreshRate = 60;
     res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
   }
-  else if (StringUtils::EqualsNoCase(fromMode, "720p"))
+  else if (StringUtils::StartsWith(fromMode, "480"))
   {
-    res->iWidth = 1280;
-    res->iHeight= 720;
-    res->iScreenWidth = 1280;
-    res->iScreenHeight= 720;
+    res->iWidth = 720;
+    res->iHeight = 480;
+    res->iScreenWidth = 720;
+    res->iScreenHeight = 480;
     res->fRefreshRate = 60;
-    res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
+
+    if (StringUtils::StartsWith(fromMode, "480p"))
+    {
+      res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
+    }
+    else
+    {
+      res->dwFlags = D3DPRESENTFLAG_INTERLACED;
+    }
   }
-  else if (StringUtils::EqualsNoCase(fromMode, "720p50hz"))
+  else if (StringUtils::StartsWith(fromMode, "576"))
+  {
+    res->iWidth = 720;
+    res->iHeight = 576;
+    res->iScreenWidth = 720;
+    res->iScreenHeight = 576;
+    res->fRefreshRate = 50;
+
+    if (StringUtils::StartsWith(fromMode, "576p"))
+    {
+      res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
+    }
+    else
+    {
+      res->dwFlags = D3DPRESENTFLAG_INTERLACED;
+    }
+  }
+  else if (StringUtils::StartsWith(fromMode, "720"))
   {
     res->iWidth = 1280;
     res->iHeight= 720;
     res->iScreenWidth = 1280;
     res->iScreenHeight= 720;
-    res->fRefreshRate = 50;
     res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
+
+    if (StringUtils::EqualsNoCase(fromMode, "720p50hz"))
+    {
+      res->fRefreshRate = 50;
+    }
+    else
+    {
+      res->fRefreshRate = 60;
+    }
   }
-  else if (StringUtils::EqualsNoCase(fromMode, "1080p"))
-  {
-    res->iWidth = 1920;
-    res->iHeight= 1080;
-    res->iScreenWidth = 1920;
-    res->iScreenHeight= 1080;
-    res->fRefreshRate = 60;
-    res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
-  }
-  else if (StringUtils::EqualsNoCase(fromMode, "1080p24hz"))
-  {
-    res->iWidth = 1920;
-    res->iHeight= 1080;
-    res->iScreenWidth = 1920;
-    res->iScreenHeight= 1080;
-    res->fRefreshRate = 24;
-    res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
-  }
-  else if (StringUtils::EqualsNoCase(fromMode, "1080p30hz"))
-  {
-    res->iWidth = 1920;
-    res->iHeight= 1080;
-    res->iScreenWidth = 1920;
-    res->iScreenHeight= 1080;
-    res->fRefreshRate = 30;
-    res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
-  }
-  else if (StringUtils::EqualsNoCase(fromMode, "1080p50hz"))
-  {
-    res->iWidth = 1920;
-    res->iHeight= 1080;
-    res->iScreenWidth = 1920;
-    res->iScreenHeight= 1080;
-    res->fRefreshRate = 50;
-    res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
-  }
-  else if (StringUtils::EqualsNoCase(fromMode, "1080i"))
-  {
-    res->iWidth = 1920;
-    res->iHeight= 1080;
-    res->iScreenWidth = 1920;
-    res->iScreenHeight= 1080;
-    res->fRefreshRate = 60;
-    res->dwFlags = D3DPRESENTFLAG_INTERLACED;
-  }
-  else if (StringUtils::EqualsNoCase(fromMode, "1080i50hz"))
+  else if (StringUtils::StartsWith(fromMode, "1080"))
   {
     res->iWidth = 1920;
     res->iHeight= 1080;
     res->iScreenWidth = 1920;
     res->iScreenHeight= 1080;
-    res->fRefreshRate = 50;
-    res->dwFlags = D3DPRESENTFLAG_INTERLACED;
-  }
-  else if (StringUtils::EqualsNoCase(fromMode, "4k2ksmpte"))
-  {
-    res->iWidth = 1920;
-    res->iHeight= 1080;
-    res->iScreenWidth = 4096;
-    res->iScreenHeight= 2160;
-    res->fRefreshRate = 24;
-    res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
-  }
-  else if (StringUtils::EqualsNoCase(fromMode, "4k2k24hz"))
-  {
-    res->iWidth = 1920;
-    res->iHeight= 1080;
-    res->iScreenWidth = 3840;
-    res->iScreenHeight= 2160;
-    res->fRefreshRate = 24;
-    res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
-  }
-  else if (StringUtils::EqualsNoCase(fromMode, "4k2k25hz"))
-  {
-    res->iWidth = 1920;
-    res->iHeight= 1080;
-    res->iScreenWidth = 3840;
-    res->iScreenHeight= 2160;
-    res->fRefreshRate = 25;
-    res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
+
+    if (StringUtils::StartsWith(fromMode, "1080i"))
+    {
+      res->dwFlags = D3DPRESENTFLAG_INTERLACED;
+    }
+    else
+    {
+      res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
+    }
+
+    if (StringUtils::EndsWith(fromMode, "24hz") || StringUtils::EndsWith(fromMode, "23hz"))
+    {
+      res->fRefreshRate = 24;
+    }
+    else if (StringUtils::EndsWith(fromMode, "30hz") || StringUtils::EndsWith(fromMode, "29hz"))
+    {
+      res->fRefreshRate = 30;
+    }
+    else if (StringUtils::EndsWith(fromMode, "50hz"))
+    {
+      res->fRefreshRate = 50;
+    }
+    else
+    {
+      res->fRefreshRate = 60;
+    }
   }
-  else if (StringUtils::EqualsNoCase(fromMode, "4k2k30hz"))
+  else if (StringUtils::StartsWith(fromMode, "4k2k"))
   {
     res->iWidth = 1920;
     res->iHeight= 1080;
-    res->iScreenWidth = 3840;
-    res->iScreenHeight= 2160;
-    res->fRefreshRate = 30;
     res->dwFlags = D3DPRESENTFLAG_PROGRESSIVE;
+
+    if (StringUtils::EqualsNoCase(fromMode, "4k2ksmpte"))
+    {
+      res->iScreenWidth = 4096;
+      res->iScreenHeight= 2160;
+      res->fRefreshRate = 24;
+    }
+    else if (StringUtils::EqualsNoCase(fromMode, "4k2k24hz") || StringUtils::EqualsNoCase(fromMode, "4k2k23hz"))
+    {
+      res->iScreenWidth = 3840;
+      res->iScreenHeight= 2160;
+      res->fRefreshRate = 24;
+    }
+    else if (StringUtils::EqualsNoCase(fromMode, "4k2k25hz"))
+    {
+      res->iScreenWidth = 3840;
+      res->iScreenHeight= 2160;
+      res->fRefreshRate = 25;
+    }
+    else if (StringUtils::EqualsNoCase(fromMode, "4k2k30hz") || StringUtils::EqualsNoCase(fromMode, "4k2k29hz"))
+    {
+      res->iScreenWidth = 3840;
+      res->iScreenHeight= 2160;
+      res->fRefreshRate = 30;
+    }
   }
   else
   {
@@ -452,4 +459,3 @@ bool aml_mode_to_resolution(const char *mode, RESOLUTION_INFO *res)
 
   return res->iWidth > 0 && res->iHeight> 0;
 }
-
diff --git a/xbmc/windowing/egl/EGLNativeTypeAmlogic.cpp b/xbmc/windowing/egl/EGLNativeTypeAmlogic.cpp
index 3c7a8e6..352384c 100644
--- a/xbmc/windowing/egl/EGLNativeTypeAmlogic.cpp
+++ b/xbmc/windowing/egl/EGLNativeTypeAmlogic.cpp
@@ -151,6 +151,12 @@ bool CEGLNativeTypeAmlogic::SetNativeResolution(const RESOLUTION_INFO &res)
       switch(res.iScreenWidth)
       {
         default:
+        case 720:
+          if (res.dwFlags & D3DPRESENTFLAG_INTERLACED)
+            SetDisplayResolution("480i");
+          else
+            SetDisplayResolution("480p");
+          break;
         case 1280:
           SetDisplayResolution("720p");
           break;
@@ -166,6 +172,12 @@ bool CEGLNativeTypeAmlogic::SetNativeResolution(const RESOLUTION_INFO &res)
       switch(res.iScreenWidth)
       {
         default:
+        case 720:
+          if (res.dwFlags & D3DPRESENTFLAG_INTERLACED)
+            SetDisplayResolution("576i");
+          else
+            SetDisplayResolution("576p");
+          break;
         case 1280:
           SetDisplayResolution("720p50hz");
           break;
-- 
1.8.3.1

